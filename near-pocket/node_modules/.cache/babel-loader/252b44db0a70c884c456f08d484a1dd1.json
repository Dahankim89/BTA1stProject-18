{"ast":null,"code":"var _jsxFileName = \"/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/SeedConfirm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport { Button, IconButton, Typography } from '@mui/material';\nimport { initialTasks, encryptMessage, generateSeed, getStorageSyncValue } from '../../utils/utilsUpdated';\nimport { useNavigate } from 'react-router';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport EntryHeader from '../../components/EntryHeader';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SeedConfirm = () => {\n  _s();\n  const navigate = useNavigate();\n  const [mnemonics, setMnemonics] = useState('');\n  const [encryptedData, setEncryptedData] = useState(null);\n  const activeWallet = useSelector(_ref => {\n    let {\n      walletEncrypted\n    } = _ref;\n    return walletEncrypted === null || walletEncrypted === void 0 ? void 0 : walletEncrypted.activeWallet;\n  });\n  useEffect(() => {\n    setMnemonicPhrase();\n  }, [activeWallet]);\n  const copyMnemonics = () => navigator.clipboard.writeText(mnemonics);\n  const setMnemonicPhrase = async () => {\n    const {\n      address,\n      mnemonic,\n      secret,\n      accountID\n    } = await initialTasks(activeWallet);\n\n    //16진수 퍼블릭 주소를 가져온다.\n    //const publicAddress = utils.PublicKey.fromString(address).data.toString('hex');\n\n    //setAddress(publicAddress);\n    setMnemonics(mnemonic);\n\n    /* const { phrase, address, secret } = generateSeed();\n    setMnemonics(phrase);\n    const hashedPassword = await getStorageSyncValue('hashedPassword');\n    console.log(hashedPassword);\n    const storedUserDetails = await getStorageSyncValue('userInfo');\n    const cipherMnemonic = encryptMessage(phrase, hashedPassword);\n    const cipherPrivate = encryptMessage(secret, hashedPassword);\n    setEncryptedData({ data: cipherMnemonic, address: address, secretKey: cipherPrivate });\n    console.log(storedUserDetails); */\n  };\n\n  const moveToDashboard = async () => {\n    navigate('/dashboard');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(EntryHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      children: \"\\uC2DC\\uB4DC \\uAD6C\\uBB38 \\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle2\",\n      sx: {\n        color: '#636363'\n      },\n      align: \"center\",\n      mt: 2,\n      children: [\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uBD84\\uC2E4\\uD558\\uAC70\\uB098 \\uB2C8\\uC5B4 \\uD3EC\\uCF13 \\uC7AC\\uC124\\uCE58 \\uC2DC,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), \"\\uC2DC\\uB4DC \\uAD6C\\uBB38\\uC73C\\uB85C \\uAE30\\uC874 \\uACC4\\uC815\\uC744 \\uBCF5\\uAD6C\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \"\\uC2DC\\uB4DC \\uAD6C\\uBB38\\uC744 \\uC548\\uC804\\uD55C \\uACF3\\uC5D0 \\uBCF4\\uAD00\\uD574\\uC8FC\\uC138\\uC694.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      align: \"left\",\n      mt: 2,\n      sx: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        backgroundColor: '#bcdefc',\n        padding: 1\n      },\n      children: [mnemonics, /*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"small\",\n        \"aria-label\": \"copy text\",\n        onClick: copyMnemonics,\n        children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: moveToDashboard,\n        fullWidth: true,\n        variant: \"contained\",\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(SeedConfirm, \"MnOruFmUyB10BqkzEbL9g1W9t64=\", false, function () {\n  return [useNavigate, useSelector];\n});\n_c = SeedConfirm;\nexport default SeedConfirm;\nvar _c;\n$RefreshReg$(_c, \"SeedConfirm\");","map":{"version":3,"names":["React","useEffect","useState","Box","Button","IconButton","Typography","initialTasks","encryptMessage","generateSeed","getStorageSyncValue","useNavigate","ContentCopyIcon","EntryHeader","useSelector","SeedConfirm","navigate","mnemonics","setMnemonics","encryptedData","setEncryptedData","activeWallet","walletEncrypted","setMnemonicPhrase","copyMnemonics","navigator","clipboard","writeText","address","mnemonic","secret","accountID","moveToDashboard","color","display","alignItems","backgroundColor","padding"],"sources":["/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/SeedConfirm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport { Button, IconButton, Typography } from '@mui/material';\nimport { initialTasks, encryptMessage, generateSeed, getStorageSyncValue } from '../../utils/utilsUpdated';\nimport { useNavigate } from 'react-router';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport EntryHeader from '../../components/EntryHeader';\nimport { useSelector } from \"react-redux\";\n\nconst SeedConfirm = () => {\n  const navigate = useNavigate();\n  const [mnemonics, setMnemonics] = useState('');\n  const [encryptedData, setEncryptedData] = useState(null);\n\n  const activeWallet = useSelector(\n    ({ walletEncrypted }) => walletEncrypted?.activeWallet\n  );\n\n  useEffect(() => {\n    setMnemonicPhrase();\n  }, [activeWallet]);\n\n  const copyMnemonics = () => navigator.clipboard.writeText(mnemonics);\n  \n  const setMnemonicPhrase = async () => {\n\n    const { address, mnemonic, secret, accountID } =\n    await initialTasks(activeWallet);\n    \n    //16진수 퍼블릭 주소를 가져온다.\n    //const publicAddress = utils.PublicKey.fromString(address).data.toString('hex');\n\n    //setAddress(publicAddress);\n    setMnemonics(mnemonic);\n\n    /* const { phrase, address, secret } = generateSeed();\n    setMnemonics(phrase);\n    const hashedPassword = await getStorageSyncValue('hashedPassword');\n    console.log(hashedPassword);\n    const storedUserDetails = await getStorageSyncValue('userInfo');\n    const cipherMnemonic = encryptMessage(phrase, hashedPassword);\n    const cipherPrivate = encryptMessage(secret, hashedPassword);\n    setEncryptedData({ data: cipherMnemonic, address: address, secretKey: cipherPrivate });\n    console.log(storedUserDetails); */\n  };\n\n  const moveToDashboard = async () => {\n    navigate('/dashboard');\n  };\n\n  return (\n    <Box>\n      <EntryHeader />\n      <Typography variant='h6' align='center'>\n        시드 구문 보기\n      </Typography>\n      <Typography variant='subtitle2' sx={{ color: '#636363' }} align='center' mt={2}>\n        비밀번호를 분실하거나 니어 포켓 재설치 시, \n        <br />\n        시드 구문으로 기존 계정을 복구할 수 있습니다.\n        <br />\n        시드 구문을 안전한 곳에 보관해주세요.\n      </Typography>\n      <Typography variant='body1' align='left' mt={2} sx={{ display: 'flex', alignItems: 'flex-end', backgroundColor: '#bcdefc', padding: 1 }}>\n        {mnemonics}\n        <IconButton size='small' aria-label='copy text' onClick={copyMnemonics}>\n          <ContentCopyIcon />\n        </IconButton>\n      </Typography>\n      <Box mt={5}>\n        <Button onClick={moveToDashboard} fullWidth variant='contained'>\n          확인\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default SeedConfirm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}