{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./reducers\";\n// let transforms = [];\n// const encryptionTransform = encryptTransform({\n//   secretKey: process.env.MY_SECRET_KEY,\n// });\n// transforms.push(encryptionTransform);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(applyMiddleware()\n// other store enhancers if any\n);\n\nconst persistConfig = {\n  key: \"root\",\n  // storage,\n  // storage: storageSession,\n  storage,\n  whitelist: [\"walletEncrypted\"]\n};\n// persistConfig.transforms = transforms;\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nlet store = createStore(persistedReducer, composeEnhancers(applyMiddleware(thunk)));\nlet persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"names":["createStore","applyMiddleware","compose","thunk","persistStore","persistReducer","storage","rootReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancer","persistConfig","key","whitelist","persistedReducer","store","persistor"],"sources":["/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/redux/store.js"],"sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\n\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport rootReducer from \"./reducers\";\n// let transforms = [];\n// const encryptionTransform = encryptTransform({\n//   secretKey: process.env.MY_SECRET_KEY,\n// });\n// transforms.push(encryptionTransform);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware()\n  // other store enhancers if any\n);\nconst persistConfig = {\n  key: \"root\",\n  // storage,\n  // storage: storageSession,\n  storage,\n  whitelist: [\"walletEncrypted\"],\n};\n// persistConfig.transforms = transforms;\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nlet store = createStore(\n  persistedReducer,\n\n  composeEnhancers(applyMiddleware(thunk))\n);\nlet persistor = persistStore(store);\nexport { store, persistor };\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAE7D,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAE/C,OAAOC,WAAW,MAAM,YAAY;AACpC;AACA;AACA;AACA;AACA;;AAEA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAoC,IAAIR,OAAO;AAE/E,MAAMS,QAAQ,GAAGH,gBAAgB,CAC/BP,eAAe;AACf;AAAA,CACD;;AACD,MAAMW,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACX;EACA;EACAP,OAAO;EACPQ,SAAS,EAAE,CAAC,iBAAiB;AAC/B,CAAC;AACD;AACA,MAAMC,gBAAgB,GAAGV,cAAc,CAACO,aAAa,EAAEL,WAAW,CAAC;AAEnE,IAAIS,KAAK,GAAGhB,WAAW,CACrBe,gBAAgB,EAEhBP,gBAAgB,CAACP,eAAe,CAACE,KAAK,CAAC,CAAC,CACzC;AACD,IAAIc,SAAS,GAAGb,YAAY,CAACY,KAAK,CAAC;AACnC,SAASA,KAAK,EAAEC,SAAS"},"metadata":{},"sourceType":"module"}