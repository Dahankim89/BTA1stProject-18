{"ast":null,"code":"var _jsxFileName = \"/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/AccountsList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box } from '@mui/system';\nimport { Button, List, ListItemButton, ListItemAvatar, ListItemText, Typography } from '@mui/material';\nimport { fetchBalance, getStorageSyncValue, initialTasks } from '../../utils/utilsUpdated';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { SWITCH_ACCOUNT } from '../../redux/actionTypes';\nimport { useNavigate } from 'react-router';\nimport PageHeader from '../../components/PageHeader';\nimport useAlert from '../../hooks/useAlert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountList = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    setAlert\n  } = useAlert();\n  const [allWallets, setAllWallets] = useState([]);\n  const activeWallet = useSelector(_ref => {\n    let {\n      walletEncrypted\n    } = _ref;\n    return walletEncrypted === null || walletEncrypted === void 0 ? void 0 : walletEncrypted.activeWallet;\n  });\n  const activeAccountID = useSelector(_ref2 => {\n    let {\n      walletEncrypted\n    } = _ref2;\n    return walletEncrypted === null || walletEncrypted === void 0 ? void 0 : walletEncrypted.activeAccountID;\n  });\n\n  // 리스트 아이템 클릭시 해당 계정 대시보드로 이동\n  const handleAccoutClick = account => {\n    const walletName = account.name;\n    const accountID = account.accountID;\n    dispatch({\n      type: SWITCH_ACCOUNT,\n      payload: {\n        activeWallet: walletName,\n        activeAccountID: accountID\n      }\n    });\n    setAlert('info', `${accountID}계정으로 전환되었습니다.`);\n    navigate('/dashboard');\n  };\n  useEffect(() => {\n    (async () => {\n      const {\n        address,\n        mnemonic,\n        secret,\n        accountID,\n        allAccounts\n      } = await initialTasks(activeWallet);\n      let userInfo = await getStorageSyncValue('userInfo');\n      let wallets = [];\n      allAccounts.map(acc => {\n        wallets.push(userInfo[acc]);\n      });\n      setAllWallets(wallets);\n    })();\n  }, [activeWallet]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"\\uACC4\\uC815 \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: '380px',\n        overflowY: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: allWallets.map((account, i) => /*#__PURE__*/_jsxDEV(ListItemButton, {\n          divider: true,\n          onClick: () => handleAccoutClick(account),\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: account.name,\n            secondary: account.accountID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginTop: '32px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          width: '150px'\n        },\n        onClick: () => navigate('/uc-seed-phrase'),\n        children: \"\\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        sx: {\n          width: '150px'\n        },\n        onClick: () => navigate('/import-account'),\n        children: \"\\uAC00\\uC838\\uC624\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountList, \"MNqiZtzFouBkRqMW6uoaEqu3F+I=\", false, function () {\n  return [useNavigate, useDispatch, useAlert, useSelector, useSelector];\n});\n_c = AccountList;\nexport default AccountList;\nvar _c;\n$RefreshReg$(_c, \"AccountList\");","map":{"version":3,"names":["React","useEffect","useState","Box","Button","List","ListItemButton","ListItemAvatar","ListItemText","Typography","fetchBalance","getStorageSyncValue","initialTasks","useDispatch","useSelector","AccountCircleIcon","SWITCH_ACCOUNT","useNavigate","PageHeader","useAlert","AccountList","navigate","dispatch","setAlert","allWallets","setAllWallets","activeWallet","walletEncrypted","activeAccountID","handleAccoutClick","account","walletName","name","accountID","type","payload","address","mnemonic","secret","allAccounts","userInfo","wallets","map","acc","push","height","overflowY","i","display","justifyContent","marginTop","width"],"sources":["/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/AccountsList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box } from '@mui/system';\nimport { Button, List, ListItemButton, ListItemAvatar, ListItemText, Typography } from '@mui/material';\nimport { fetchBalance, getStorageSyncValue, initialTasks } from '../../utils/utilsUpdated';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { SWITCH_ACCOUNT } from '../../redux/actionTypes';\nimport { useNavigate } from 'react-router';\nimport PageHeader from '../../components/PageHeader';\nimport useAlert from '../../hooks/useAlert';\n\nconst AccountList = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { setAlert } = useAlert();\n  const [allWallets, setAllWallets] = useState([]);\n\n  const activeWallet = useSelector(({ walletEncrypted }) => walletEncrypted?.activeWallet);\n  const activeAccountID = useSelector(({ walletEncrypted }) => walletEncrypted?.activeAccountID);\n\n  // 리스트 아이템 클릭시 해당 계정 대시보드로 이동\n  const handleAccoutClick = (account) => {\n    const walletName = account.name;\n    const accountID = account.accountID;\n    dispatch({\n      type: SWITCH_ACCOUNT,\n      payload: {\n        activeWallet: walletName,\n        activeAccountID: accountID,\n      },\n    });\n    setAlert('info', `${accountID}계정으로 전환되었습니다.`);\n    navigate('/dashboard');\n  };\n\n  useEffect(() => {\n    (async () => {\n      const { address, mnemonic, secret, accountID, allAccounts } = await initialTasks(activeWallet);\n      let userInfo = await getStorageSyncValue('userInfo');\n      let wallets = [];\n      allAccounts.map((acc) => {\n        wallets.push(userInfo[acc]);\n      });\n      setAllWallets(wallets);\n    })();\n  }, [activeWallet]);\n  return (\n    <Box>\n      <PageHeader title='계정 관리' />\n      <Box sx={{ height: '380px', overflowY: 'auto' }}>\n        <List>\n          {allWallets.map((account, i) => (\n            <ListItemButton divider key={i} onClick={() => handleAccoutClick(account)}>\n              <ListItemAvatar>\n                <AccountCircleIcon />\n              </ListItemAvatar>\n              <ListItemText primary={account.name} secondary={account.accountID} />\n            </ListItemButton>\n          ))}\n        </List>\n      </Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', marginTop: '32px' }}>\n        <Button variant='contained' sx={{ width: '150px' }} onClick={() => navigate('/uc-seed-phrase')}>\n          생성\n        </Button>\n        <Button variant='outlined' sx={{ width: '150px' }} onClick={() => navigate('/import-account')}>\n          가져오기\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AccountList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}