{"ast":null,"code":"import { CREATE_WALLET, CREATE_WALLET_ENCRYPTED, IMPORT_WALLET, REMOVE_MNEMONIC, SET_CURRENT_WALLET_NAME, SET_SOLANA_USD_PRICE, SHOW_ALL_CUSTOM_TOKENS, SWITCH_ACCOUNT } from \"../actionTypes\";\nconst initialState = {\n  walletEncrypted: null,\n  wallet: null,\n  currentWalletName: \"wallet1\",\n  allTokens: [{\n    name: \"NEAR\",\n    symbol: \"NEAR\"\n  }],\n  activeWallet: \"\",\n  activeAccountID: \"\",\n  solanaUsdPrice: 0\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case CREATE_WALLET:\n      return {\n        ...state,\n        wallet: {\n          ...state.wallet,\n          ...payload\n        }\n      };\n    case CREATE_WALLET_ENCRYPTED:\n      return {\n        ...state,\n        walletEncrypted: {\n          ...state.walletEncrypted,\n          ...payload\n        }\n      };\n    case IMPORT_WALLET:\n      return {\n        ...state,\n        walletEncrypted: {\n          ...state.walletEncrypted,\n          ...payload\n        }\n      };\n    case REMOVE_MNEMONIC:\n      return {\n        ...state,\n        wallet: {\n          ...state.walletEncrypted,\n          mnemonic: null\n        }\n      };\n    case SET_CURRENT_WALLET_NAME:\n      return {\n        ...state,\n        currentWalletName: payload\n      };\n    case SHOW_ALL_CUSTOM_TOKENS:\n      return {\n        ...state,\n        allTokens: payload\n      };\n    case SWITCH_ACCOUNT:\n      return {\n        ...state,\n        activeWallet: payload.activeWallet,\n        activeAccountID: payload.activeAccountID\n      };\n    case SET_SOLANA_USD_PRICE:\n      return {\n        ...state,\n        solanaUsdPrice: payload\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["CREATE_WALLET","CREATE_WALLET_ENCRYPTED","IMPORT_WALLET","REMOVE_MNEMONIC","SET_CURRENT_WALLET_NAME","SET_SOLANA_USD_PRICE","SHOW_ALL_CUSTOM_TOKENS","SWITCH_ACCOUNT","initialState","walletEncrypted","wallet","currentWalletName","allTokens","name","symbol","activeWallet","activeAccountID","solanaUsdPrice","state","action","type","payload","mnemonic"],"sources":["/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/redux/reducers/walletEncrypted.js"],"sourcesContent":["import {\n  CREATE_WALLET,\n  CREATE_WALLET_ENCRYPTED,\n  IMPORT_WALLET,\n  REMOVE_MNEMONIC,\n  SET_CURRENT_WALLET_NAME,\n  SET_SOLANA_USD_PRICE,\n  SHOW_ALL_CUSTOM_TOKENS,\n  SWITCH_ACCOUNT,\n} from \"../actionTypes\";\n\nconst initialState = {\n  walletEncrypted: null,\n  wallet: null,\n  currentWalletName: \"wallet1\",\n  allTokens: [{ name: \"NEAR\", symbol: \"NEAR\" }],\n  activeWallet: \"\",\n  activeAccountID: \"\",\n  solanaUsdPrice: 0,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case CREATE_WALLET:\n      return {\n        ...state,\n        wallet: {\n          ...state.wallet,\n          ...payload,\n        },\n      };\n    case CREATE_WALLET_ENCRYPTED:\n      return {\n        ...state,\n        walletEncrypted: {\n          ...state.walletEncrypted,\n          ...payload,\n        },\n      };\n\n    case IMPORT_WALLET:\n      return {\n        ...state,\n        walletEncrypted: {\n          ...state.walletEncrypted,\n          ...payload,\n        },\n      };\n\n    case REMOVE_MNEMONIC:\n      return {\n        ...state,\n        wallet: {\n          ...state.walletEncrypted,\n          mnemonic: null,\n        },\n      };\n\n    case SET_CURRENT_WALLET_NAME:\n      return {\n        ...state,\n        currentWalletName: payload,\n      };\n\n    case SHOW_ALL_CUSTOM_TOKENS:\n      return {\n        ...state,\n        allTokens: payload,\n      };\n\n    case SWITCH_ACCOUNT:\n      return {\n        ...state,\n        activeWallet: payload.activeWallet,\n        activeAccountID: payload.activeAccountID,\n      };\n\n    case SET_SOLANA_USD_PRICE:\n      return {\n        ...state,\n        solanaUsdPrice: payload,\n      };\n\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA,SACEA,aAAa,EACbC,uBAAuB,EACvBC,aAAa,EACbC,eAAe,EACfC,uBAAuB,EACvBC,oBAAoB,EACpBC,sBAAsB,EACtBC,cAAc,QACT,gBAAgB;AAEvB,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAE,IAAI;EACrBC,MAAM,EAAE,IAAI;EACZC,iBAAiB,EAAE,SAAS;EAC5BC,SAAS,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE;EAAO,CAAC,CAAC;EAC7CC,YAAY,EAAE,EAAE;EAChBC,eAAe,EAAE,EAAE;EACnBC,cAAc,EAAE;AAClB,CAAC;AAED,eAAe,YAAwC;EAAA,IAA9BC,KAAK,uEAAGV,YAAY;EAAA,IAAEW,MAAM;EACnD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC,QAAQC,IAAI;IACV,KAAKpB,aAAa;MAChB,OAAO;QACL,GAAGkB,KAAK;QACRR,MAAM,EAAE;UACN,GAAGQ,KAAK,CAACR,MAAM;UACf,GAAGW;QACL;MACF,CAAC;IACH,KAAKpB,uBAAuB;MAC1B,OAAO;QACL,GAAGiB,KAAK;QACRT,eAAe,EAAE;UACf,GAAGS,KAAK,CAACT,eAAe;UACxB,GAAGY;QACL;MACF,CAAC;IAEH,KAAKnB,aAAa;MAChB,OAAO;QACL,GAAGgB,KAAK;QACRT,eAAe,EAAE;UACf,GAAGS,KAAK,CAACT,eAAe;UACxB,GAAGY;QACL;MACF,CAAC;IAEH,KAAKlB,eAAe;MAClB,OAAO;QACL,GAAGe,KAAK;QACRR,MAAM,EAAE;UACN,GAAGQ,KAAK,CAACT,eAAe;UACxBa,QAAQ,EAAE;QACZ;MACF,CAAC;IAEH,KAAKlB,uBAAuB;MAC1B,OAAO;QACL,GAAGc,KAAK;QACRP,iBAAiB,EAAEU;MACrB,CAAC;IAEH,KAAKf,sBAAsB;MACzB,OAAO;QACL,GAAGY,KAAK;QACRN,SAAS,EAAES;MACb,CAAC;IAEH,KAAKd,cAAc;MACjB,OAAO;QACL,GAAGW,KAAK;QACRH,YAAY,EAAEM,OAAO,CAACN,YAAY;QAClCC,eAAe,EAAEK,OAAO,CAACL;MAC3B,CAAC;IAEH,KAAKX,oBAAoB;MACvB,OAAO;QACL,GAAGa,KAAK;QACRD,cAAc,EAAEI;MAClB,CAAC;IAEH;MACE,OAAOH,KAAK;EAAC;AAEnB"},"metadata":{},"sourceType":"module"}