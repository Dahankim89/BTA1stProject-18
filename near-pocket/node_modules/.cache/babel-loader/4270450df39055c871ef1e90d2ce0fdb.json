{"ast":null,"code":"var _jsxFileName = \"/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/AccountList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box } from '@mui/system';\nimport { List, ListItemButton, ListItemAvatar, ListItemText, Typography } from '@mui/material';\nimport { fetchBalance, getStorageSyncValue, initialTasks } from '../../utils/utilsUpdated';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { SWITCH_ACCOUNT } from '../../redux/actionTypes';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountList = () => {\n  _s();\n  const [allWallets, setAllWallets] = useState([]);\n  const activeWallet = useSelector(_ref => {\n    let {\n      walletEncrypted\n    } = _ref;\n    return walletEncrypted === null || walletEncrypted === void 0 ? void 0 : walletEncrypted.activeWallet;\n  });\n  const activeAccountID = useSelector(_ref2 => {\n    let {\n      walletEncrypted\n    } = _ref2;\n    return walletEncrypted === null || walletEncrypted === void 0 ? void 0 : walletEncrypted.activeAccountID;\n  });\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // 리스트 아이템 클릭시 해당 계정 대시보드로 이동\n  const handleAccoutClick = (add, i) => {\n    console.log(add, i);\n    const walletName = add.name;\n    const accountID = add.accountID;\n    dispatch({\n      type: SWITCH_ACCOUNT,\n      payload: {\n        activeWallet: walletName,\n        activeAccountID: accountID\n      }\n    });\n    navigate('/dashboard');\n  };\n  useEffect(() => {\n    (async () => {\n      const {\n        address,\n        mnemonic,\n        secret,\n        accountID,\n        allAccounts\n      } = await initialTasks(activeWallet);\n      let userInfo = await getStorageSyncValue('userInfo');\n      let wallets = [];\n      allAccounts.map(acc => {\n        wallets.push(userInfo[acc]);\n      });\n      setAllWallets(wallets);\n    })();\n  }, [activeWallet]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      children: \"\\uACC4\\uC815 \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: allWallets.map((add, i) => /*#__PURE__*/_jsxDEV(ListItemButton, {\n          divider: true,\n          onClick: () => handleAccoutClick(add, i),\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: add.name,\n            secondary: add.accountID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/uc-seed-phrase\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uACC4\\uC815 \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/import-account\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uACC4\\uC815 \\uAC00\\uC838\\uC624\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountList, \"KSecsVwnB+433h8TymBzSZZGNTY=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useNavigate];\n});\n_c = AccountList;\nexport default AccountList;\nvar _c;\n$RefreshReg$(_c, \"AccountList\");","map":{"version":3,"names":["React","useEffect","useState","Box","List","ListItemButton","ListItemAvatar","ListItemText","Typography","fetchBalance","getStorageSyncValue","initialTasks","useDispatch","useSelector","AccountCircleIcon","SWITCH_ACCOUNT","useNavigate","AccountList","allWallets","setAllWallets","activeWallet","walletEncrypted","activeAccountID","dispatch","navigate","handleAccoutClick","add","i","console","log","walletName","name","accountID","type","payload","address","mnemonic","secret","allAccounts","userInfo","wallets","map","acc","push"],"sources":["/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/AccountList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box } from '@mui/system';\nimport { List, ListItemButton, ListItemAvatar, ListItemText, Typography } from '@mui/material';\nimport { fetchBalance, getStorageSyncValue, initialTasks } from '../../utils/utilsUpdated';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { SWITCH_ACCOUNT } from '../../redux/actionTypes';\nimport { useNavigate } from 'react-router';\n\nconst AccountList = () => {\n  const [allWallets, setAllWallets] = useState([]);\n\n  const activeWallet = useSelector(({ walletEncrypted }) => walletEncrypted?.activeWallet);\n  const activeAccountID = useSelector(({ walletEncrypted }) => walletEncrypted?.activeAccountID);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  // 리스트 아이템 클릭시 해당 계정 대시보드로 이동\n  const handleAccoutClick = (add, i) => {\n    console.log(add, i);\n    const walletName = add.name;\n    const accountID = add.accountID;\n    \n    dispatch({\n      type: SWITCH_ACCOUNT,\n      payload: {\n        activeWallet: walletName,\n        activeAccountID: accountID,\n      },\n    });\n\n    navigate('/dashboard');\n  };\n\n  useEffect(() => {\n    (async () => {\n      const { address, mnemonic, secret, accountID, allAccounts } = await initialTasks(activeWallet);\n      let userInfo = await getStorageSyncValue('userInfo');\n      let wallets = [];\n      allAccounts.map((acc) => {\n        wallets.push(userInfo[acc]);\n      });\n      setAllWallets(wallets);\n    })();\n  }, [activeWallet]);\n  return (\n    <Box>\n      <Typography variant='h6' align='center'>\n        계정 관리\n      </Typography>\n      <Box>\n        <List>\n          {allWallets.map((add, i) => (\n            <ListItemButton divider key={i} onClick={() => handleAccoutClick(add, i)}>\n              <ListItemAvatar>\n                <AccountCircleIcon />\n              </ListItemAvatar>\n              <ListItemText primary={add.name} secondary={add.accountID} />\n            </ListItemButton>\n          ))}\n        </List>\n      </Box>\n      <Link to='/uc-seed-phrase'>\n        <button>계정 생성</button>\n      </Link>\n\n      <Link to='/import-account'>\n        <button>계정 가져오기</button>\n      </Link>\n    </Box>\n  );\n};\n\nexport default AccountList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}