{"ast":null,"code":"var _jsxFileName = \"/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/SeedPhrase.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { CREATE_WALLET, SET_CURRENT_WALLET_NAME, SWITCH_ACCOUNT } from \"../../redux/actionTypes\";\nimport { decryptMessage, encryptMessage, generateSeed, getStorageSyncValue, setStorageSyncValue } from \"../../utils/utilsUpdated\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Seedphrase = () => {\n  _s();\n  const [mnemonics, setMnemonics] = useState(\"\");\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setMnemonicPhrase();\n  }, []);\n  const setMnemonicPhrase = async () => {\n    const {\n      phrase,\n      address,\n      secret\n    } = generateSeed();\n    setMnemonics(phrase);\n    const hashedPassword = await getStorageSyncValue(\"hashedPassword\");\n    const storedUserDetails = await getStorageSyncValue(\"userInfo\");\n    const cipherMnemonic = encryptMessage(phrase, hashedPassword);\n    const cipherPrivate = encryptMessage(secret, hashedPassword);\n    console.log(storedUserDetails);\n    let keys = storedUserDetails ? Object.keys(storedUserDetails) : null;\n    let userInfo;\n    if (!storedUserDetails) {\n      userInfo = {\n        wallet1: {\n          name: \"wallet1\",\n          accounts: {\n            [address]: {\n              data: cipherMnemonic,\n              address: address,\n              secretKey: cipherPrivate\n            }\n          }\n        }\n      };\n    } else {\n      let walletName = `wallet${keys.length + 1}`;\n      userInfo = {\n        ...storedUserDetails,\n        [walletName]: {\n          name: walletName,\n          accounts: {\n            [address]: {\n              data: cipherMnemonic,\n              address: address,\n              secretKey: cipherPrivate\n            }\n          }\n        }\n      };\n    }\n    dispatch({\n      type: CREATE_WALLET,\n      payload: {\n        isLoggedIn: true\n      }\n    });\n    dispatch({\n      type: SWITCH_ACCOUNT,\n      payload: {\n        activeWallet: keys ? `wallet${keys.length + 1}` : \"wallet1\",\n        activeAccountID: \"\"\n      }\n    });\n    localStorage.setItem(\"wallet\", true);\n    dispatch({\n      type: SET_CURRENT_WALLET_NAME,\n      payload: \"wallet1\"\n    });\n    await setStorageSyncValue(\"userInfo\", userInfo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Seed Phrase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: mnemonics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/reserve-account-id\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Seedphrase, \"jd9lQBHksnOlwMnjtx22MBUD9Xc=\", false, function () {\n  return [useDispatch];\n});\n_c = Seedphrase;\nexport default Seedphrase;\nvar _c;\n$RefreshReg$(_c, \"Seedphrase\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Link","CREATE_WALLET","SET_CURRENT_WALLET_NAME","SWITCH_ACCOUNT","decryptMessage","encryptMessage","generateSeed","getStorageSyncValue","setStorageSyncValue","Seedphrase","mnemonics","setMnemonics","dispatch","setMnemonicPhrase","phrase","address","secret","hashedPassword","storedUserDetails","cipherMnemonic","cipherPrivate","console","log","keys","Object","userInfo","wallet1","name","accounts","data","secretKey","walletName","length","type","payload","isLoggedIn","activeWallet","activeAccountID","localStorage","setItem"],"sources":["/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/SeedPhrase.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  CREATE_WALLET,\n  SET_CURRENT_WALLET_NAME,\n  SWITCH_ACCOUNT,\n} from \"../../redux/actionTypes\";\nimport {\n  decryptMessage,\n  encryptMessage,\n  generateSeed,\n  getStorageSyncValue,\n  setStorageSyncValue,\n} from \"../../utils/utilsUpdated\";\n\nconst Seedphrase = () => {\n  const [mnemonics, setMnemonics] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setMnemonicPhrase();\n  }, []);\n\n  const setMnemonicPhrase = async () => {\n    const { phrase, address, secret } = generateSeed();\n    setMnemonics(phrase);\n    const hashedPassword = await getStorageSyncValue(\"hashedPassword\");\n    const storedUserDetails = await getStorageSyncValue(\"userInfo\");\n    const cipherMnemonic = encryptMessage(phrase, hashedPassword);\n    const cipherPrivate = encryptMessage(secret, hashedPassword);\n    console.log(storedUserDetails);\n\n    let keys = storedUserDetails ? Object.keys(storedUserDetails) : null;\n\n    let userInfo;\n\n    if (!storedUserDetails) {\n      userInfo = {\n        wallet1: {\n          name: \"wallet1\",\n          accounts: {\n            [address]: {\n              data: cipherMnemonic,\n              address: address,\n              secretKey: cipherPrivate,\n            },\n          },\n        },\n      };\n    } else {\n      let walletName = `wallet${keys.length + 1}`;\n      userInfo = {\n        ...storedUserDetails,\n        [walletName]: {\n          name: walletName,\n          accounts: {\n            [address]: {\n              data: cipherMnemonic,\n              address: address,\n              secretKey: cipherPrivate,\n            },\n          },\n        },\n      };\n    }\n\n    dispatch({\n      type: CREATE_WALLET,\n      payload: {\n        isLoggedIn: true,\n      },\n    });\n    dispatch({\n      type: SWITCH_ACCOUNT,\n      payload: {\n        activeWallet: keys ? `wallet${keys.length + 1}` : \"wallet1\",\n        activeAccountID: \"\",\n      },\n    });\n\n    localStorage.setItem(\"wallet\", true);\n    dispatch({ type: SET_CURRENT_WALLET_NAME, payload: \"wallet1\" });\n    await setStorageSyncValue(\"userInfo\", userInfo);\n  };\n\n  return (\n    <div>\n      <h1>Seed Phrase</h1>\n      <h2>{mnemonics}</h2>\n\n      <Link to=\"/reserve-account-id\">\n        <button>Next</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default Seedphrase;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}