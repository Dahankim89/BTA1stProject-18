{"ast":null,"code":"var _jsxFileName = \"/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/ReserveAccountID.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { connect } from 'near-api-js';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport { Button, TextField, Typography } from '@mui/material';\nimport { CONFIG } from '../../constants';\nimport { checkAccountStatus, getStorageSyncValue, setStorageSyncValue } from '../../utils/utilsUpdated';\nimport { SWITCH_ACCOUNT } from '../../redux/actionTypes';\nimport EntryHeader from '../../components/EntryHeader';\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\nimport useAlert from '../../hooks/useAlert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReserveAccountID = () => {\n  _s();\n  const [accountID, setAccountID] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  const {\n    setAlert\n  } = useAlert();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const activeWallet = useSelector(_ref => {\n    let {\n      walletEncrypted\n    } = _ref;\n    return walletEncrypted === null || walletEncrypted === void 0 ? void 0 : walletEncrypted.activeWallet;\n  });\n  const handleIdInput = e => {\n    setErrorMsg('');\n    setAccountID(e.target.value);\n  };\n  const createAccountID = async () => {\n    try {\n      setLoading(true);\n      let formattedAccountID = accountID.includes('.testnet') ? accountID : accountID + '.testnet';\n      const near = await connect(CONFIG);\n      const accountInfo = await near.account(formattedAccountID);\n      const state = await checkAccountStatus(accountInfo);\n      const userInfo = await getStorageSyncValue('userInfo');\n      let keys = userInfo ? Object.keys(userInfo) : null;\n      let publicKey = Object.keys(userInfo[activeWallet]['accounts'])[0];\n      if (state) {\n        alert('이미 동일한 계정 ID가 있습니다.');\n        setErrorMsg('이미 동일한 계정 ID가 있습니다.');\n        setLoading(false);\n      } else {\n        await near.createAccount(formattedAccountID, publicKey);\n        userInfo[activeWallet] = {\n          ...userInfo[activeWallet],\n          accountID: formattedAccountID\n        };\n        dispatch({\n          type: SWITCH_ACCOUNT,\n          payload: {\n            activeWallet: keys ? `wallet${keys.length}` : 'wallet1',\n            activeAccountID: formattedAccountID\n          }\n        });\n        await setStorageSyncValue('userInfo', userInfo);\n        setAlert('success', `${formattedAccountID} 계정이 생성되었습니다.`);\n        navigate('/dashboard');\n      }\n    } catch (error) {\n      console.log('err===', error);\n      setAlert('error', error.message);\n      // alert(error.message);\n    }\n\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(EntryHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"left\",\n      children: \"\\uACC4\\uC815 ID \\uC0DD\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle2\",\n      sx: {\n        color: '#636363'\n      },\n      align: \"left\",\n      mt: 2,\n      children: \"ID \\uC0DD\\uC131\\uC2DC \\\".testnet\\\"\\uC774 \\uC790\\uB3D9\\uC73C\\uB85C \\uBD99\\uC5B4\\uC11C \\uC0DD\\uC131\\uB429\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      sx: {\n        display: 'flex',\n        alignItems: 'flex-end'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\uACC4\\uC815 ID\",\n        fullWidth: true,\n        variant: \"standard\",\n        onChange: handleIdInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        children: \".testnet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), errorMsg && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle2\",\n      align: \"left\",\n      sx: {\n        color: 'red'\n      },\n      mt: 2,\n      mb: 2,\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: createAccountID,\n        fullWidth: true,\n        variant: \"contained\",\n        disabled: !accountID || errorMsg,\n        children: \"\\uACC4\\uC815 ID\\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(ReserveAccountID, \"b+Z7hHa5i+yKohZJKVfk7d6Bfms=\", false, function () {\n  return [useAlert, useNavigate, useDispatch, useSelector];\n});\n_c = ReserveAccountID;\nexport default ReserveAccountID;\nvar _c;\n$RefreshReg$(_c, \"ReserveAccountID\");","map":{"version":3,"names":["React","useState","connect","useNavigate","useSelector","useDispatch","Box","Button","TextField","Typography","CONFIG","checkAccountStatus","getStorageSyncValue","setStorageSyncValue","SWITCH_ACCOUNT","EntryHeader","LoadingSpinner","useAlert","ReserveAccountID","accountID","setAccountID","loading","setLoading","errorMsg","setErrorMsg","setAlert","navigate","dispatch","activeWallet","walletEncrypted","handleIdInput","e","target","value","createAccountID","formattedAccountID","includes","near","accountInfo","account","state","userInfo","keys","Object","publicKey","alert","createAccount","type","payload","length","activeAccountID","error","console","log","message","color","display","alignItems"],"sources":["/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/ReserveAccountID.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'near-api-js';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport { Button, TextField, Typography } from '@mui/material';\nimport { CONFIG } from '../../constants';\nimport { checkAccountStatus, getStorageSyncValue, setStorageSyncValue } from '../../utils/utilsUpdated';\nimport { SWITCH_ACCOUNT } from '../../redux/actionTypes';\nimport EntryHeader from '../../components/EntryHeader';\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\nimport useAlert from '../../hooks/useAlert';\n\nconst ReserveAccountID = () => {\n  const [accountID, setAccountID] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  const { setAlert } = useAlert();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const activeWallet = useSelector(({ walletEncrypted }) => walletEncrypted?.activeWallet);\n  const handleIdInput = (e) => {\n    setErrorMsg('');\n    setAccountID(e.target.value);\n  };\n  \n  const createAccountID = async () => {\n    try {\n      setLoading(true);\n      let formattedAccountID = accountID.includes('.testnet') ? accountID : accountID + '.testnet';\n      const near = await connect(CONFIG);\n      const accountInfo = await near.account(formattedAccountID);\n      const state = await checkAccountStatus(accountInfo);\n      const userInfo = await getStorageSyncValue('userInfo');\n      let keys = userInfo ? Object.keys(userInfo) : null;\n\n      let publicKey = Object.keys(userInfo[activeWallet]['accounts'])[0];\n\n      if (state) {\n        alert('이미 동일한 계정 ID가 있습니다.');\n        setErrorMsg('이미 동일한 계정 ID가 있습니다.');\n        setLoading(false);\n      } else {\n        await near.createAccount(formattedAccountID, publicKey);\n        userInfo[activeWallet] = {\n          ...userInfo[activeWallet],\n          accountID: formattedAccountID,\n        };\n\n        dispatch({\n          type: SWITCH_ACCOUNT,\n          payload: {\n            activeWallet: keys ? `wallet${keys.length}` : 'wallet1',\n            activeAccountID: formattedAccountID,\n          },\n        });\n        await setStorageSyncValue('userInfo', userInfo);\n        setAlert('success', `${formattedAccountID} 계정이 생성되었습니다.`);\n        navigate('/dashboard');\n      }\n    } catch (error) {\n      console.log('err===', error);\n      setAlert('error', error.message);\n      // alert(error.message);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Box>\n      <EntryHeader />\n      <Typography variant='h6' align='left'>\n        계정 ID 생성\n      </Typography>\n      <Typography variant='subtitle2' sx={{ color: '#636363' }} align='left' mt={2}>\n        ID 생성시 \".testnet\"이 자동으로 붙어서 생성됩니다.\n      </Typography>\n      <Box mt={5} sx={{ display: 'flex', alignItems: 'flex-end' }}>\n        <TextField label='계정 ID' fullWidth variant='standard' onChange={handleIdInput} />\n        <Typography variant='subtitle2'>.testnet</Typography>\n      </Box>\n      {errorMsg && (\n        <Typography variant='subtitle2' align='left' sx={{ color: 'red' }} mt={2} mb={2}>\n          {errorMsg}\n        </Typography>\n      )}\n      <Box mt={5}>\n        <Button onClick={createAccountID} fullWidth variant='contained' disabled={!accountID || errorMsg}>\n          계정 ID생성\n        </Button>\n      </Box>\n      {loading && <LoadingSpinner />}\n    </Box>\n  );\n};\n\nexport default ReserveAccountID;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}