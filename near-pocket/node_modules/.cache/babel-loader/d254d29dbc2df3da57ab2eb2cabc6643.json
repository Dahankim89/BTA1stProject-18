{"ast":null,"code":"var _jsxFileName = \"/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchBalance, getStorageSyncValue, initialTasks, showAllHoldings } from '../../utils/utilsUpdated';\nimport { SHOW_ALL_CUSTOM_TOKENS, SWITCH_ACCOUNT } from '../../redux/actionTypes';\nimport { CONFIG } from '../../constants';\nimport { connect, utils } from 'near-api-js';\nimport { Box } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet near;\nconst Dashboard = () => {\n  _s();\n  const [privateKey, setPrivateKey] = useState('');\n  const [address, setAddress] = useState('');\n  const [seedPhrase, setSeedPhrase] = useState('');\n  const [balance, setBalance] = useState(0);\n  const [allWallets, setAllWallets] = useState([]);\n  const allTokens = useSelector(_ref => {\n    let {\n      walletEncrypted\n    } = _ref;\n    return walletEncrypted === null || walletEncrypted === void 0 ? void 0 : walletEncrypted.allTokens;\n  });\n  const activeWallet = useSelector(_ref2 => {\n    let {\n      walletEncrypted\n    } = _ref2;\n    return walletEncrypted === null || walletEncrypted === void 0 ? void 0 : walletEncrypted.activeWallet;\n  });\n  const activeAccountID = useSelector(_ref3 => {\n    let {\n      walletEncrypted\n    } = _ref3;\n    return walletEncrypted === null || walletEncrypted === void 0 ? void 0 : walletEncrypted.activeAccountID;\n  });\n  console.log(activeWallet);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    (async () => {\n      near = await connect(CONFIG);\n    })();\n  }, []);\n  useEffect(() => {\n    (async () => {\n      const {\n        address,\n        mnemonic,\n        secret,\n        accountID,\n        allAccounts\n      } = await initialTasks(activeWallet);\n      console.log('accc', accountID);\n      let userInfo = await getStorageSyncValue('userInfo');\n      const account = await near.account(accountID);\n      console.log(account);\n      const availableBalance = await fetchBalance(account);\n      //const allTokens = await showAllHoldings(accountID, near);\n      let wallets = [];\n      allAccounts.map(acc => {\n        wallets.push(userInfo[acc]);\n      });\n      setAllWallets(wallets);\n      dispatch({\n        type: SHOW_ALL_CUSTOM_TOKENS,\n        payload: allTokens\n      });\n\n      //16진수 퍼블릭 주소를 가져온다.\n      const publicAddress = utils.PublicKey.fromString(address).data.toString('hex');\n      setAddress(publicAddress);\n      setPrivateKey(secret);\n      setSeedPhrase(mnemonic);\n      setBalance(availableBalance);\n    })();\n  }, [activeWallet]);\n  const changeAccount = async e => {\n    let [walletName, accId] = e.target.value.split(':');\n    console.log('ACCC============================', accId);\n    dispatch({\n      type: SWITCH_ACCOUNT,\n      payload: {\n        activeWallet: walletName,\n        activeAccountID: accId\n      }\n    });\n  };\n  console.log('active: ', activeAccountID);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        overflowWrap: 'break-word'\n      },\n      children: [\"\\uD504\\uB77C\\uC774\\uBE57\\uD0A4: \", privateKey]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        overflowWrap: 'break-word'\n      },\n      children: [\"\\uC8FC\\uC18C: \", address]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\uC2DC\\uB4DC \\uAD6C\\uBB38: \", seedPhrase]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => changeAccount(e),\n      children: allWallets.map((add, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: `${add.name}:${add.accountID}`,\n        selected: add.accountID === activeAccountID,\n        children: add.accountID\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Balance: \", balance, \" NEAR\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/send\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/uc-seed-phrase\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uACC4\\uC815 \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/import-account\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uACC4\\uC815 \\uAC00\\uC838\\uC624\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uB0B4\\uC5ED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: allTokens === null || allTokens === void 0 ? void 0 : allTokens.map(tk => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [tk.name, \" - \", tk.balance, \" \", tk.symbol]\n      }, tk.address, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"X9gwwif5131wKim20mFWxf2doAc=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","Link","useLocation","fetchBalance","getStorageSyncValue","initialTasks","showAllHoldings","SHOW_ALL_CUSTOM_TOKENS","SWITCH_ACCOUNT","CONFIG","connect","utils","Box","near","Dashboard","privateKey","setPrivateKey","address","setAddress","seedPhrase","setSeedPhrase","balance","setBalance","allWallets","setAllWallets","allTokens","walletEncrypted","activeWallet","activeAccountID","console","log","dispatch","mnemonic","secret","accountID","allAccounts","userInfo","account","availableBalance","wallets","map","acc","push","type","payload","publicAddress","PublicKey","fromString","data","toString","changeAccount","e","walletName","accId","target","value","split","overflowWrap","add","i","name","tk","symbol"],"sources":["/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/Dashboard.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { fetchBalance, getStorageSyncValue, initialTasks, showAllHoldings } from '../../utils/utilsUpdated';\nimport { SHOW_ALL_CUSTOM_TOKENS, SWITCH_ACCOUNT } from '../../redux/actionTypes';\nimport { CONFIG } from '../../constants';\nimport { connect, utils } from 'near-api-js';\nimport { Box } from '@mui/system';\n\nlet near;\n\nconst Dashboard = () => {\n  const [privateKey, setPrivateKey] = useState('');\n  const [address, setAddress] = useState('');\n  const [seedPhrase, setSeedPhrase] = useState('');\n\n  const [balance, setBalance] = useState(0);\n  const [allWallets, setAllWallets] = useState([]);\n\n  const allTokens = useSelector(({ walletEncrypted }) => walletEncrypted?.allTokens);\n  const activeWallet = useSelector(({ walletEncrypted }) => walletEncrypted?.activeWallet);\n\n  const activeAccountID = useSelector(({ walletEncrypted }) => walletEncrypted?.activeAccountID);\n\n  console.log(activeWallet);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    (async () => {\n      near = await connect(CONFIG);\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      const { address, mnemonic, secret, accountID, allAccounts } = await initialTasks(activeWallet);\n      console.log('accc', accountID);\n\n      let userInfo = await getStorageSyncValue('userInfo');\n      const account = await near.account(accountID);\n      console.log(account);\n      const availableBalance = await fetchBalance(account);\n      //const allTokens = await showAllHoldings(accountID, near);\n      let wallets = [];\n      allAccounts.map((acc) => {\n        wallets.push(userInfo[acc]);\n      });\n      setAllWallets(wallets);\n      dispatch({\n        type: SHOW_ALL_CUSTOM_TOKENS,\n        payload: allTokens,\n      });\n\n      //16진수 퍼블릭 주소를 가져온다.\n      const publicAddress = utils.PublicKey.fromString(address).data.toString('hex');\n\n      setAddress(publicAddress);\n      setPrivateKey(secret);\n      setSeedPhrase(mnemonic);\n      setBalance(availableBalance);\n    })();\n  }, [activeWallet]);\n\n  const changeAccount = async (e) => {\n    let [walletName, accId] = e.target.value.split(':');\n    console.log('ACCC============================', accId);\n    dispatch({\n      type: SWITCH_ACCOUNT,\n      payload: {\n        activeWallet: walletName,\n        activeAccountID: accId,\n      },\n    });\n  };\n\n  console.log('active: ', activeAccountID);\n  return (\n    <Box>\n      <h3 style={{ overflowWrap: 'break-word' }}>프라이빗키: {privateKey}</h3>\n      <h3 style={{ overflowWrap: 'break-word' }}>주소: {address}</h3>\n      <h3>시드 구문: {seedPhrase}</h3>\n\n      <select onChange={(e) => changeAccount(e)}>\n        {allWallets.map((add, i) => (\n          <option key={i} value={`${add.name}:${add.accountID}`} selected={add.accountID === activeAccountID}>\n            {add.accountID}\n          </option>\n        ))}\n      </select>\n\n      <h4>Balance: {balance} NEAR</h4>\n      <Link to='/send'>\n        <button>전송</button>\n      </Link>\n\n      <Link to='/uc-seed-phrase'>\n        <button>계정 생성</button>\n      </Link>\n\n      <Link to='/import-account'>\n        <button>계정 가져오기</button>\n      </Link>\n\n      <h2>트랜잭션 내역</h2>\n      <ul>\n        {allTokens?.map((tk) => (\n          <li key={tk.address}>\n            {tk.name} - {tk.balance} {tk.symbol}\n          </li>\n        ))}\n      </ul>\n    </Box>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}