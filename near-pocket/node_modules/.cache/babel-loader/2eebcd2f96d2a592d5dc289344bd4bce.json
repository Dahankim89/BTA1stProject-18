{"ast":null,"code":"var _jsxFileName = \"/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/LockAccount.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport { Button, TextField, Typography } from '@mui/material';\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\nimport useAlert from '../../hooks/useAlert';\nimport { encryptMessage, getAccountIds, getStorageSyncValue, setStorageSyncValue } from '../../utils/utilsUpdated';\nimport PageHeader from '../../components/PageHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LockAccount = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [password, setPassword] = useState('');\n  const {\n    setAlert\n  } = useAlert();\n  const navigate = useNavigate();\n  const handleTypeConfirmPassword = e => {\n    //setMnemonicError(false);\n    setPassword(e.target.value);\n  };\n  const unlockAccount = async () => {\n    try {\n      if (!password) {\n        setAlert('error', '비밀번호를 입력해주세요.');\n        //alert(\"패스워드를 입력해주세요.\");\n        return;\n      }\n      setLoading(true);\n\n      //패스워드 비교\n      const savedPassword = await getStorageSyncValue('hashedPassword', true);\n      console.log(savedPassword);\n      if (savedPassword !== password) {\n        setAlert('error', '비밀번호가 올바르지 않습니다.');\n        setLoading(false);\n        return;\n      }\n      localStorage.setItem('wallet', true);\n      navigate('/dashboard');\n    } catch (error) {\n      console.log('err===', error.message);\n      setLoading(false);\n      setAlert('error', error.message);\n      //alert(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"\\uACC4\\uC815 \\uC7A0\\uAE08\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle2\",\n      sx: {\n        color: '#636363'\n      },\n      align: \"center\",\n      mt: 2,\n      children: [\"NEAR POCKET \\uACC4\\uC815 \\uC7A0\\uAE08\\uC744 \\uD574\\uC81C\\uD558\\uB824\\uBA74 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 34\n      }, this), \" \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"password\",\n        required: true,\n        type: \"password\",\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n        fullWidth: true,\n        variant: \"outlined\",\n        onChange: handleTypeConfirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: unlockAccount,\n        fullWidth: true,\n        variant: \"contained\",\n        disabled: !password,\n        children: \"\\uC7A0\\uAE08 \\uD574\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(LockAccount, \"gp2HgtSYV3Skkb9XmIwmc8NZAHc=\", false, function () {\n  return [useAlert, useNavigate];\n});\n_c = LockAccount;\nexport default LockAccount;\nvar _c;\n$RefreshReg$(_c, \"LockAccount\");","map":{"version":3,"names":["React","useState","useNavigate","Box","Button","TextField","Typography","LoadingSpinner","useAlert","encryptMessage","getAccountIds","getStorageSyncValue","setStorageSyncValue","PageHeader","LockAccount","loading","setLoading","password","setPassword","setAlert","navigate","handleTypeConfirmPassword","e","target","value","unlockAccount","savedPassword","console","log","localStorage","setItem","error","message","color"],"sources":["/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/LockAccount.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport { Button, TextField, Typography } from '@mui/material';\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\nimport useAlert from '../../hooks/useAlert';\n\nimport { encryptMessage, getAccountIds, getStorageSyncValue, setStorageSyncValue } from '../../utils/utilsUpdated';\n\nimport PageHeader from '../../components/PageHeader';\n\nconst LockAccount = () => {\n  const [loading, setLoading] = useState(false);\n  const [password, setPassword] = useState('');\n  const { setAlert } = useAlert();\n\n  const navigate = useNavigate();\n\n\n  const handleTypeConfirmPassword = (e) => {\n    //setMnemonicError(false);\n    setPassword(e.target.value);\n  };\n\n  const unlockAccount = async () => {\n    try {\n      \n      if (!password) {\n        setAlert('error', '비밀번호를 입력해주세요.');\n        //alert(\"패스워드를 입력해주세요.\");\n        return;\n      }\n      setLoading(true);\n      \n      //패스워드 비교\n      const savedPassword = await getStorageSyncValue('hashedPassword', true);\n      console.log(savedPassword)\n      if(savedPassword !== password) {\n        setAlert('error', '비밀번호가 올바르지 않습니다.');\n        setLoading(false);\n        return;\n      }\n\n      localStorage.setItem('wallet', true);\n      navigate('/dashboard');\n\n    } catch (error) {\n      console.log('err===', error.message);\n      setLoading(false);\n      setAlert('error', error.message);\n      //alert(error.message);\n    }\n  };\n\n  return (\n    <Box>\n      <PageHeader title='계정 잠금' />\n      <Typography variant='subtitle2' sx={{ color: '#636363' }} align='center' mt={2}>\n        NEAR POCKET 계정 잠금을 해제하려면 <br/> 비밀번호를 입력해주세요.\n      </Typography>\n      <Box mt={5}>\n        <TextField  name=\"password\"\n                    required={true} type=\"password\" label='비밀번호를 입력하세요.' fullWidth variant='outlined' onChange={handleTypeConfirmPassword} />\n      </Box>\n      {/* {mnemonicError && (\n        <Typography variant='subtitle2' align='left' sx={{ color: 'red' }} mt={2} mb={2}>\n          비밀번호가 올바르지 않습니다..\n        </Typography>\n      )} */}\n      <Box mt={5}>\n        <Button onClick={unlockAccount} fullWidth variant='contained' disabled={!password}>\n          잠금 해제\n        </Button>\n        \n      </Box>\n      {loading && <LoadingSpinner />}\n    </Box>\n  );\n};\n\nexport default LockAccount;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}