{"ast":null,"code":"var _jsxFileName = \"/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { fetchBalance, getStorageSyncValue, initialTasks, showAllHoldings } from \"../../utils/utilsUpdated\";\nimport { SHOW_ALL_CUSTOM_TOKENS, SWITCH_ACCOUNT } from \"../../redux/actionTypes\";\nimport { CONFIG } from \"../../constants\";\nimport { connect, utils } from \"near-api-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet near;\nconst Dashboard = () => {\n  _s();\n  const [privateKey, setPrivateKey] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [seedPhrase, setSeedPhrase] = useState(\"\");\n  const [balance, setBalance] = useState(0);\n  const [allWallets, setAllWallets] = useState([]);\n  const allTokens = useSelector(_ref => {\n    let {\n      walletEncrypted\n    } = _ref;\n    return walletEncrypted === null || walletEncrypted === void 0 ? void 0 : walletEncrypted.allTokens;\n  });\n  const activeWallet = useSelector(_ref2 => {\n    let {\n      walletEncrypted\n    } = _ref2;\n    return walletEncrypted === null || walletEncrypted === void 0 ? void 0 : walletEncrypted.activeWallet;\n  });\n  const activeAccountID = useSelector(_ref3 => {\n    let {\n      walletEncrypted\n    } = _ref3;\n    return walletEncrypted === null || walletEncrypted === void 0 ? void 0 : walletEncrypted.activeAccountID;\n  });\n  console.log(activeWallet);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    (async () => {\n      near = await connect(CONFIG);\n    })();\n  }, []);\n  useEffect(() => {\n    (async () => {\n      const {\n        address,\n        mnemonic,\n        secret,\n        accountID,\n        allAccounts\n      } = await initialTasks(activeWallet);\n      console.log(\"accc\", accountID);\n      let userInfo = await getStorageSyncValue(\"userInfo\");\n      const account = await near.account(accountID);\n      console.log(account);\n      const availableBalance = await fetchBalance(account);\n      //const allTokens = await showAllHoldings(accountID, near);\n      let wallets = [];\n      allAccounts.map(acc => {\n        wallets.push(userInfo[acc]);\n      });\n      setAllWallets(wallets);\n      dispatch({\n        type: SHOW_ALL_CUSTOM_TOKENS,\n        payload: allTokens\n      });\n\n      //16진수 퍼블릭 주소를 가져온다.\n      const publicAddress = utils.PublicKey.fromString(address).data.toString('hex');\n      setAddress(publicAddress);\n      setPrivateKey(secret);\n      setSeedPhrase(mnemonic);\n      setBalance(availableBalance);\n    })();\n  }, [activeWallet]);\n  const changeAccount = async e => {\n    let [walletName, accId] = e.target.value.split(\":\");\n    console.log(\"ACCC============================\", accId);\n    dispatch({\n      type: SWITCH_ACCOUNT,\n      payload: {\n        activeWallet: walletName,\n        activeAccountID: accId\n      }\n    });\n  };\n  console.log(\"active: \", activeAccountID);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        overflowWrap: \"break-word\"\n      },\n      children: [\"\\uD504\\uB77C\\uC774\\uBE57\\uD0A4: \", privateKey]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        overflowWrap: \"break-word\"\n      },\n      children: [\"\\uC8FC\\uC18C: \", address]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\uC2DC\\uB4DC \\uAD6C\\uBB38: \", seedPhrase]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => changeAccount(e),\n      children: allWallets.map((add, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: `${add.name}:${add.accountID}`,\n        selected: add.accountID === activeAccountID,\n        children: add.accountID\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Balance: \", balance, \" NEAR\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/send\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/seed-phrase\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uACC4\\uC815 \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/import-account\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uACC4\\uC815 \\uAC00\\uC838\\uC624\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD2B8\\uB79C\\uC7AD\\uC158 \\uB0B4\\uC5ED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: allTokens === null || allTokens === void 0 ? void 0 : allTokens.map(tk => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [tk.name, \" - \", tk.balance, \" \", tk.symbol]\n      }, tk.address, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"slroemjWt83akTIinaGkavQ6I0Q=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","Link","fetchBalance","getStorageSyncValue","initialTasks","showAllHoldings","SHOW_ALL_CUSTOM_TOKENS","SWITCH_ACCOUNT","CONFIG","connect","utils","near","Dashboard","privateKey","setPrivateKey","address","setAddress","seedPhrase","setSeedPhrase","balance","setBalance","allWallets","setAllWallets","allTokens","walletEncrypted","activeWallet","activeAccountID","console","log","dispatch","mnemonic","secret","accountID","allAccounts","userInfo","account","availableBalance","wallets","map","acc","push","type","payload","publicAddress","PublicKey","fromString","data","toString","changeAccount","e","walletName","accId","target","value","split","overflowWrap","add","i","name","tk","symbol"],"sources":["/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/Dashboard.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  fetchBalance,\n  getStorageSyncValue,\n  initialTasks,\n  showAllHoldings,\n} from \"../../utils/utilsUpdated\";\nimport {\n  SHOW_ALL_CUSTOM_TOKENS,\n  SWITCH_ACCOUNT,\n} from \"../../redux/actionTypes\";\nimport { CONFIG } from \"../../constants\";\nimport { connect, utils } from \"near-api-js\";\n\nlet near;\n\nconst Dashboard = () => {\n  const [privateKey, setPrivateKey] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [seedPhrase, setSeedPhrase] = useState(\"\");\n\n  const [balance, setBalance] = useState(0);\n  const [allWallets, setAllWallets] = useState([]);\n\n  const allTokens = useSelector(\n    ({ walletEncrypted }) => walletEncrypted?.allTokens\n  );\n  const activeWallet = useSelector(\n    ({ walletEncrypted }) => walletEncrypted?.activeWallet\n  );\n\n  const activeAccountID = useSelector(\n    ({ walletEncrypted }) => walletEncrypted?.activeAccountID\n  );\n\n  console.log(activeWallet);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    (async () => {\n      near = await connect(CONFIG);\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      const { address, mnemonic, secret, accountID, allAccounts } =\n        await initialTasks(activeWallet);\n      console.log(\"accc\", accountID);\n\n      let userInfo = await getStorageSyncValue(\"userInfo\");\n      const account = await near.account(accountID);\n      console.log(account)\n      const availableBalance = await fetchBalance(account);\n      //const allTokens = await showAllHoldings(accountID, near);\n      let wallets = [];\n      allAccounts.map(acc => {\n        wallets.push(userInfo[acc]);\n      });\n      setAllWallets(wallets);\n      dispatch({\n        type: SHOW_ALL_CUSTOM_TOKENS,\n        payload: allTokens,\n      });\n\n      //16진수 퍼블릭 주소를 가져온다.\n      const publicAddress = utils.PublicKey.fromString(address).data.toString('hex');\n\n      setAddress(publicAddress);\n      setPrivateKey(secret);\n      setSeedPhrase(mnemonic);\n      setBalance(availableBalance);\n    })();\n  }, [activeWallet]);\n\n  const changeAccount = async e => {\n    let [walletName, accId] = e.target.value.split(\":\");\n    console.log(\"ACCC============================\", accId);\n    dispatch({\n      type: SWITCH_ACCOUNT,\n      payload: {\n        activeWallet: walletName,\n        activeAccountID: accId,\n      },\n    });\n  };\n\n  console.log(\"active: \", activeAccountID);\n  return (\n    <>\n      <h3 style={{ overflowWrap: \"break-word\" }}>프라이빗키: {privateKey}</h3>\n      <h3 style={{ overflowWrap: \"break-word\" }}>주소: {address}</h3>\n      <h3>시드 구문: {seedPhrase}</h3>\n\n      <select onChange={e => changeAccount(e)}>\n        {allWallets.map((add, i) => (\n          <option\n            key={i}\n            value={`${add.name}:${add.accountID}`}\n            selected={add.accountID === activeAccountID}\n          >\n            {add.accountID}\n          </option>\n        ))}\n      </select>\n\n      <h4>Balance: {balance} NEAR</h4>\n      <Link to=\"/send\">\n        <button>전송</button>\n      </Link>\n\n      <Link to=\"/seed-phrase\">\n        <button>계정 생성</button>\n      </Link>\n\n      <Link to=\"/import-account\">\n        <button>계정 가져오기</button>\n      </Link>\n\n      <h2>트랜잭션 내역</h2>\n      <ul>\n        {allTokens?.map(tk => (\n          <li key={tk.address}>\n            {tk.name} - {tk.balance} {tk.symbol}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}