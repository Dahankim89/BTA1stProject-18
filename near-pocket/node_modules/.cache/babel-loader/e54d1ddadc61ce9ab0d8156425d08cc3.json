{"ast":null,"code":"var _jsxFileName = \"/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/Send.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { CONFIG } from \"../../constants\";\nimport { connect, KeyPair, keyStores, transactions } from \"near-api-js\";\nimport { parseNearAmount } from \"near-api-js/lib/utils/format\";\nimport { BN } from \"bn.js\";\nimport { initialTasks } from \"../../utils/utilsUpdated\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FT_TRANSFER_GAS = parseNearAmount(\"0.00000000003\");\nconst FT_TRANSFER_DEPOSIT = \"1\";\nconst SendTokens = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [receiver, setReceiver] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [selectedAsset, setSelectedAsset] = useState(\"\");\n  const navigate = useNavigate();\n  const currentWalletName = useSelector(_ref => {\n    let {\n      walletEncrypted\n    } = _ref;\n    return walletEncrypted === null || walletEncrypted === void 0 ? void 0 : walletEncrypted.currentWalletName;\n  });\n  const allTokens = useSelector(_ref2 => {\n    let {\n      walletEncrypted\n    } = _ref2;\n    return walletEncrypted === null || walletEncrypted === void 0 ? void 0 : walletEncrypted.allTokens;\n  });\n  const activeWallet = useSelector(_ref3 => {\n    let {\n      walletEncrypted\n    } = _ref3;\n    return walletEncrypted === null || walletEncrypted === void 0 ? void 0 : walletEncrypted.activeWallet;\n  });\n  const sendTransaction = async () => {\n    setLoading(true);\n    try {\n      const {\n        secret,\n        accountID\n      } = await initialTasks(activeWallet);\n      const keyStore = new keyStores.InMemoryKeyStore();\n      const keyPair = KeyPair.fromString(secret);\n      await keyStore.setKey(\"testnet\", accountID, keyPair);\n      const near = await connect({\n        ...CONFIG,\n        keyStore\n      });\n      const senderAccount = await near.account(accountID);\n      const yoctoAmount = parseNearAmount(amount);\n      const convertedAmount = new BN(yoctoAmount);\n      if (selectedAsset !== \"\") {\n        let [contractAddress, decimals] = selectedAsset.split(\":\");\n        console.log(\"OTHER SSETS TRANSFER\", contractAddress, receiver);\n        let transfer = await senderAccount.functionCall(contractAddress, \"ft_transfer\", {\n          amount: (amount * 10 ** decimals).toString(),\n          receiver_id: receiver\n        }, FT_TRANSFER_GAS, FT_TRANSFER_DEPOSIT);\n        console.log(\"HASH========\", transfer);\n      } else {\n        console.log(\"NEAR TRANSFER\");\n        const transaction = await senderAccount.sendMoney(receiver, convertedAmount);\n        console.log(\"HASH========\", transaction.transaction.hash);\n      }\n      alert(\"성공적으로 송금되었습니다.\");\n      navigate(\"/dashboard\");\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.log(\"err=============\", error.message);\n      if (error.message.includes(\"no matching key pair found in InMemorySigner\")) {\n        alert(\"해당 계정은 송금에 대한 권한이 없습니다.\");\n      } else {\n        alert(error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uB2C8\\uC5B4 \\uC1A1\\uAE08\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedAsset(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"NEAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), allTokens.map((tk, ind) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: `${tk.contractName}:${tk.decimals}`,\n        children: tk.name\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: receiver,\n      placeholder: \"Account ID \\uC785\\uB825\",\n      onChange: e => setReceiver(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: amount,\n      placeholder: \"\\uAE08\\uC561 \\uC785\\uB825\",\n      onChange: e => setAmount(e.target.value),\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendTransaction,\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dashboard\",\n        children: \"\\uBA54\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(SendTokens, \"9gdy1Ea/5TY25K55OJc6+xF5YrQ=\", false, function () {\n  return [useNavigate, useSelector, useSelector, useSelector];\n});\n_c = SendTokens;\nexport default SendTokens;\nvar _c;\n$RefreshReg$(_c, \"SendTokens\");","map":{"version":3,"names":["React","useState","useSelector","Link","useNavigate","CONFIG","connect","KeyPair","keyStores","transactions","parseNearAmount","BN","initialTasks","FT_TRANSFER_GAS","FT_TRANSFER_DEPOSIT","SendTokens","loading","setLoading","receiver","setReceiver","amount","setAmount","selectedAsset","setSelectedAsset","navigate","currentWalletName","walletEncrypted","allTokens","activeWallet","sendTransaction","secret","accountID","keyStore","InMemoryKeyStore","keyPair","fromString","setKey","near","senderAccount","account","yoctoAmount","convertedAmount","contractAddress","decimals","split","console","log","transfer","functionCall","toString","receiver_id","transaction","sendMoney","hash","alert","error","message","includes","e","target","value","map","tk","ind","contractName","name"],"sources":["/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/Send.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { CONFIG } from \"../../constants\";\nimport { connect, KeyPair, keyStores, transactions } from \"near-api-js\";\nimport { parseNearAmount } from \"near-api-js/lib/utils/format\";\nimport { BN } from \"bn.js\";\nimport { initialTasks } from \"../../utils/utilsUpdated\";\n\nconst FT_TRANSFER_GAS = parseNearAmount(\"0.00000000003\");\nconst FT_TRANSFER_DEPOSIT = \"1\";\n\nconst SendTokens = () => {\n  const [loading, setLoading] = useState(false);\n  const [receiver, setReceiver] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [selectedAsset, setSelectedAsset] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const currentWalletName = useSelector(\n    ({ walletEncrypted }) => walletEncrypted?.currentWalletName\n  );\n\n  const allTokens = useSelector(\n    ({ walletEncrypted }) => walletEncrypted?.allTokens\n  );\n\n  const activeWallet = useSelector(\n    ({ walletEncrypted }) => walletEncrypted?.activeWallet\n  );\n\n  const sendTransaction = async () => {\n    setLoading(true);\n    try {\n      const { secret, accountID } = await initialTasks(activeWallet);\n      const keyStore = new keyStores.InMemoryKeyStore();\n      const keyPair = KeyPair.fromString(secret);\n      await keyStore.setKey(\"testnet\", accountID, keyPair);\n\n      const near = await connect({ ...CONFIG, keyStore });\n      const senderAccount = await near.account(accountID);\n\n      const yoctoAmount = parseNearAmount(amount);\n      const convertedAmount = new BN(yoctoAmount);\n\n      if (selectedAsset !== \"\") {\n        let [contractAddress, decimals] = selectedAsset.split(\":\");\n        console.log(\"OTHER SSETS TRANSFER\", contractAddress, receiver);\n        let transfer = await senderAccount.functionCall(\n          contractAddress,\n          \"ft_transfer\",\n          {\n            amount: (amount * 10 ** decimals).toString(),\n            receiver_id: receiver,\n          },\n          FT_TRANSFER_GAS,\n          FT_TRANSFER_DEPOSIT\n        );\n        console.log(\"HASH========\", transfer);\n      } else {\n        console.log(\"NEAR TRANSFER\");\n        const transaction = await senderAccount.sendMoney(\n          receiver,\n          convertedAmount\n        );\n        console.log(\"HASH========\", transaction.transaction.hash);\n      }\n      alert(\"성공적으로 송금되었습니다.\");\n      navigate(\"/dashboard\");\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.log(\"err=============\", error.message);\n      if (\n        error.message.includes(\"no matching key pair found in InMemorySigner\")\n      ) {\n        alert(\"해당 계정은 송금에 대한 권한이 없습니다.\");\n      } else {\n        alert(error.message);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h3>니어 송금</h3>\n      <select onChange={e => setSelectedAsset(e.target.value)}>\n        <option value=\"\">NEAR</option>\n        {allTokens.map((tk, ind) => (\n          <option key={ind} value={`${tk.contractName}:${tk.decimals}`}>\n            {tk.name}\n          </option>\n        ))}\n      </select>\n\n      <input\n        value={receiver}\n        placeholder=\"Account ID 입력\"\n        onChange={e => setReceiver(e.target.value)}\n      />\n      <input\n        value={amount}\n        placeholder=\"금액 입력\"\n        onChange={e => setAmount(e.target.value)}\n        type=\"number\"\n      />\n\n      <>\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <button onClick={sendTransaction}>전송</button>\n        )}\n        <Link to=\"/dashboard\">메인</Link>\n      </>\n    </div>\n  );\n};\n\nexport default SendTokens;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}