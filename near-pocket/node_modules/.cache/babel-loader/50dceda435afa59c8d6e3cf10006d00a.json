{"ast":null,"code":"var _jsxFileName = \"/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/SeedConfirm.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { initialTasks } from \"../../utils/utilsUpdated\";\nimport { CONFIG } from \"../../constants\";\nimport { connect, utils } from \"near-api-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [seedPhrase, setSeedPhrase] = useState(\"\");\n  const navigate = useNavigate();\n  const activeWallet = useSelector(_ref => {\n    let {\n      walletEncrypted\n    } = _ref;\n    return walletEncrypted === null || walletEncrypted === void 0 ? void 0 : walletEncrypted.activeWallet;\n  });\n  useEffect(() => {\n    (async () => {\n      near = await connect(CONFIG);\n    })();\n  }, []);\n  useEffect(() => {\n    (async () => {\n      const {\n        address,\n        mnemonic,\n        secret,\n        accountID\n      } = await initialTasks(activeWallet);\n      console.log(\"accc\", mnemonic);\n\n      //16진수 퍼블릭 주소를 가져온다.\n      //const publicAddress = utils.PublicKey.fromString(address).data.toString('hex');\n\n      //setAddress(publicAddress);\n      setSeedPhrase(mnemonic);\n    })();\n  }, [activeWallet]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uC2DC\\uB4DC \\uAD6C\\uBB38 \\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uBD84\\uC2E4\\uD558\\uAC70\\uB098 \\uB2C8\\uC5B4 \\uC9C0\\uAC11 \\uC7AC\\uC124\\uCE58 \\uC2DC, \\uC2DC\\uB4DC \\uAD6C\\uBB38\\uC73C\\uB85C \\uAE30\\uC874 \\uACC4\\uC815\\uC744 \\uBCF5\\uAD6C\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uC2DC\\uB4DC \\uAD6C\\uBB38\\uC744 \\uC548\\uC804\\uD55C \\uACF3\\uC5D0 \\uBCF4\\uAD00\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\uC2DC\\uB4DC \\uAD6C\\uBB38: \", seedPhrase]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: 10\n      },\n      onClick: () => navigate(\"/dashboard\"),\n      children: \"\\uC644\\uB8CC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"OE/13N4Re4nfttkh3trk1uwewk4=\", false, function () {\n  return [useNavigate, useSelector];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","useNavigate","initialTasks","CONFIG","connect","utils","Dashboard","seedPhrase","setSeedPhrase","navigate","activeWallet","walletEncrypted","near","address","mnemonic","secret","accountID","console","log","marginTop"],"sources":["/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/SeedConfirm.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport {\n  initialTasks\n} from \"../../utils/utilsUpdated\";\n\nimport { CONFIG } from \"../../constants\";\nimport { connect, utils } from \"near-api-js\";\n\nconst Dashboard = () => {\n  const [seedPhrase, setSeedPhrase] = useState(\"\");\n\n  const navigate = useNavigate();\n  \n  const activeWallet = useSelector(\n    ({ walletEncrypted }) => walletEncrypted?.activeWallet\n  );\n\n  useEffect(() => {\n    (async () => {\n      near = await connect(CONFIG);\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      const { address, mnemonic, secret, accountID } =\n        await initialTasks(activeWallet);\n      console.log(\"accc\", mnemonic);\n\n      //16진수 퍼블릭 주소를 가져온다.\n      //const publicAddress = utils.PublicKey.fromString(address).data.toString('hex');\n\n      //setAddress(publicAddress);\n      setSeedPhrase(mnemonic);\n    \n    })();\n  }, [activeWallet]);\n\n  return (\n    <>\n      <h3>시드 구문 보기</h3>\n      <h3>비밀번호를 분실하거나 니어 지갑 재설치 시, 시드 구문으로 기존 계정을 복구할 수 있습니다. 시드 구문을 안전한 곳에 보관해주세요.</h3>\n      <h3>시드 구문: {seedPhrase}</h3>\n    \n      <button style={{ marginTop: 10 }} onClick={() => navigate(\"/dashboard\")}>\n        완료\n      </button>\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SACEC,YAAY,QACP,0BAA0B;AAEjC,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,OAAO,EAAEC,KAAK,QAAQ,aAAa;AAAC;AAAA;AAE7C,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMW,QAAQ,GAAGR,WAAW,EAAE;EAE9B,MAAMS,YAAY,GAAGV,WAAW,CAC9B;IAAA,IAAC;MAAEW;IAAgB,CAAC;IAAA,OAAKA,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAED,YAAY;EAAA,EACvD;EAEDb,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACXe,IAAI,GAAG,MAAMR,OAAO,CAACD,MAAM,CAAC;IAC9B,CAAC,GAAG;EACN,CAAC,EAAE,EAAE,CAAC;EAENN,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAM;QAAEgB,OAAO;QAAEC,QAAQ;QAAEC,MAAM;QAAEC;MAAU,CAAC,GAC5C,MAAMd,YAAY,CAACQ,YAAY,CAAC;MAClCO,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEJ,QAAQ,CAAC;;MAE7B;MACA;;MAEA;MACAN,aAAa,CAACM,QAAQ,CAAC;IAEzB,CAAC,GAAG;EACN,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElB,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,eACjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkF,eAClF;MAAA,0CAAYH,UAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAE5B;MAAQ,KAAK,EAAE;QAAEY,SAAS,EAAE;MAAG,CAAE;MAAC,OAAO,EAAE,MAAMV,QAAQ,CAAC,YAAY,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAE/D;EAAA,gBACR;AAEP,CAAC;AAAC,GAzCIH,SAAS;EAAA,QAGIL,WAAW,EAEPD,WAAW;AAAA;AAAA,KAL5BM,SAAS;AA2Cf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}