{"ast":null,"code":"var _jsxFileName = \"/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/ConfirmSeedPhrase.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport { Button, TextField, Typography } from '@mui/material';\nimport { decryptMessage, getStorageSyncValue, setStorageSyncValue } from '../../utils/utilsUpdated';\nimport { CREATE_WALLET, SET_CURRENT_WALLET_NAME, SWITCH_ACCOUNT } from '../../redux/actionTypes';\nimport EntryHeader from '../../components/EntryHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfirmSeedPhrase = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [confirmMnemonics, setConfirmMnemonics] = useState('');\n  const [mnemonicError, setMnemonicError] = useState(false);\n  const dispatch = useDispatch();\n  const handleTypeConfirmMnemonics = e => {\n    setMnemonicError(false);\n    setConfirmMnemonics(e.target.value);\n  };\n  const storeUserInfo = async () => {\n    const hashedPassword = await getStorageSyncValue('hashedPassword');\n    const storedUserDetails = await getStorageSyncValue('userInfo');\n    const encryptedData = {\n      ...(location === null || location === void 0 ? void 0 : location.state)\n    };\n    let keys = storedUserDetails ? Object.keys(storedUserDetails) : null;\n    console.log(`router: ${encryptedData.data}`);\n    console.log(`decrypted: ${decryptMessage(encryptedData.data, hashedPassword)}`);\n    if (decryptMessage(encryptedData.data, hashedPassword) === confirmMnemonics) {\n      let userInfo;\n      if (!storedUserDetails) {\n        userInfo = {\n          wallet1: {\n            name: 'wallet1',\n            accounts: {\n              [encryptedData.address]: {\n                data: encryptedData.data,\n                address: encryptedData.address,\n                secretKey: encryptedData.secretKey\n              }\n            }\n          }\n        };\n      } else {\n        let walletName = `wallet${keys.length + 1}`;\n        userInfo = {\n          ...storedUserDetails,\n          [walletName]: {\n            name: walletName,\n            accounts: {\n              [encryptedData.address]: {\n                data: encryptedData.data,\n                address: encryptedData.address,\n                secretKey: encryptedData.secretKey\n              }\n            }\n          }\n        };\n      }\n      dispatch({\n        type: CREATE_WALLET,\n        payload: {\n          isLoggedIn: true\n        }\n      });\n      dispatch({\n        type: SWITCH_ACCOUNT,\n        payload: {\n          activeWallet: keys ? `wallet${keys.length + 1}` : 'wallet1',\n          activeAccountID: ''\n        }\n      });\n      localStorage.setItem('wallet', true);\n      dispatch({\n        type: SET_CURRENT_WALLET_NAME,\n        payload: 'wallet1'\n      });\n      await setStorageSyncValue('userInfo', userInfo);\n      navigate('/reserve-account-id');\n    } else {\n      setMnemonicError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(EntryHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"left\",\n      children: \"\\uC2DC\\uB4DC \\uAD6C\\uBB38 \\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle2\",\n      sx: {\n        color: '#636363'\n      },\n      align: \"left\",\n      mt: 2,\n      children: \"\\uBC1B\\uC558\\uB358 \\uC2DC\\uB4DC \\uAD6C\\uBB38\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\uC2DC\\uB4DC \\uAD6C\\uBB38 \\uD655\\uC778\",\n        fullWidth: true,\n        variant: \"outlined\",\n        onChange: handleTypeConfirmMnemonics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), mnemonicError && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle2\",\n      align: \"left\",\n      sx: {\n        color: 'red'\n      },\n      mt: 2,\n      mb: 2,\n      children: \"\\uC2DC\\uB4DC \\uAD6C\\uBB38\\uC774 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: storeUserInfo,\n        fullWidth: true,\n        variant: \"contained\",\n        disabled: mnemonicError || !confirmMnemonics,\n        children: \"\\uC2DC\\uB4DC \\uAD6C\\uBB38 \\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfirmSeedPhrase, \"ll36FzcNdBzFRAjn/1ijAowamTo=\", false, function () {\n  return [useNavigate, useLocation, useDispatch];\n});\n_c = ConfirmSeedPhrase;\nexport default ConfirmSeedPhrase;\nvar _c;\n$RefreshReg$(_c, \"ConfirmSeedPhrase\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","useDispatch","Box","Button","TextField","Typography","decryptMessage","getStorageSyncValue","setStorageSyncValue","CREATE_WALLET","SET_CURRENT_WALLET_NAME","SWITCH_ACCOUNT","EntryHeader","ConfirmSeedPhrase","navigate","location","confirmMnemonics","setConfirmMnemonics","mnemonicError","setMnemonicError","dispatch","handleTypeConfirmMnemonics","e","target","value","storeUserInfo","hashedPassword","storedUserDetails","encryptedData","state","keys","Object","console","log","data","userInfo","wallet1","name","accounts","address","secretKey","walletName","length","type","payload","isLoggedIn","activeWallet","activeAccountID","localStorage","setItem","color"],"sources":["/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/ConfirmSeedPhrase.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport { Button, TextField, Typography } from '@mui/material';\nimport { decryptMessage, getStorageSyncValue, setStorageSyncValue } from '../../utils/utilsUpdated';\nimport { CREATE_WALLET, SET_CURRENT_WALLET_NAME, SWITCH_ACCOUNT } from '../../redux/actionTypes';\nimport EntryHeader from '../../components/EntryHeader';\n\nconst ConfirmSeedPhrase = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [confirmMnemonics, setConfirmMnemonics] = useState('');\n  const [mnemonicError, setMnemonicError] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleTypeConfirmMnemonics = (e) => {\n    setMnemonicError(false);\n    setConfirmMnemonics(e.target.value);\n  };\n\n  const storeUserInfo = async () => {\n    const hashedPassword = await getStorageSyncValue('hashedPassword');\n    const storedUserDetails = await getStorageSyncValue('userInfo');\n    const encryptedData = { ...location?.state };\n    let keys = storedUserDetails ? Object.keys(storedUserDetails) : null;\n\n    console.log(`router: ${encryptedData.data}`);\n    console.log(`decrypted: ${decryptMessage(encryptedData.data, hashedPassword)}`);\n\n    if (decryptMessage(encryptedData.data, hashedPassword) === confirmMnemonics) {\n      let userInfo;\n\n      if (!storedUserDetails) {\n        userInfo = {\n          wallet1: {\n            name: 'wallet1',\n            accounts: {\n              [encryptedData.address]: {\n                data: encryptedData.data,\n                address: encryptedData.address,\n                secretKey: encryptedData.secretKey,\n              },\n            },\n          },\n        };\n      } else {\n        let walletName = `wallet${keys.length + 1}`;\n        userInfo = {\n          ...storedUserDetails,\n          [walletName]: {\n            name: walletName,\n            accounts: {\n              [encryptedData.address]: {\n                data: encryptedData.data,\n                address: encryptedData.address,\n                secretKey: encryptedData.secretKey,\n              },\n            },\n          },\n        };\n      }\n\n      dispatch({\n        type: CREATE_WALLET,\n        payload: {\n          isLoggedIn: true,\n        },\n      });\n      dispatch({\n        type: SWITCH_ACCOUNT,\n        payload: {\n          activeWallet: keys ? `wallet${keys.length + 1}` : 'wallet1',\n          activeAccountID: '',\n        },\n      });\n\n      localStorage.setItem('wallet', true);\n      dispatch({ type: SET_CURRENT_WALLET_NAME, payload: 'wallet1' });\n      await setStorageSyncValue('userInfo', userInfo);\n      navigate('/reserve-account-id');\n    } else {\n      setMnemonicError(true);\n    }\n  };\n\n  return (\n    <Box>\n      <EntryHeader />\n      <Typography variant='h6' align='left'>\n        시드 구문 확인\n      </Typography>\n      <Typography variant='subtitle2' sx={{ color: '#636363' }} align='left' mt={2}>\n        받았던 시드 구문을 입력해주세요.\n      </Typography>\n      <Box mt={5}>\n        <TextField label='시드 구문 확인' fullWidth variant='outlined' onChange={handleTypeConfirmMnemonics} />\n      </Box>\n      {mnemonicError && (\n        <Typography variant='subtitle2' align='left' sx={{ color: 'red' }} mt={2} mb={2}>\n          시드 구문이 일치하지 않습니다.\n        </Typography>\n      )}\n      <Box mt={5}>\n        <Button onClick={storeUserInfo} fullWidth variant='contained' disabled={mnemonicError || !confirmMnemonics}>\n          시드 구문 확인\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ConfirmSeedPhrase;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}