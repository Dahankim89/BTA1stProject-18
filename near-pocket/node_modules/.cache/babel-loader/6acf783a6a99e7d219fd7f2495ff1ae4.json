{"ast":null,"code":"var _jsxFileName = \"/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/ReserveAccountID.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { connect } from \"near-api-js\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CONFIG } from \"../../constants\";\nimport { checkAccountStatus, getStorageSyncValue, setStorageSyncValue } from \"../../utils/utilsUpdated\";\nimport { SWITCH_ACCOUNT } from \"../../redux/actionTypes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReserveAccountID = () => {\n  _s();\n  const [accountID, setAccountID] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const activeWallet = useSelector(_ref => {\n    let {\n      walletEncrypted\n    } = _ref;\n    return walletEncrypted === null || walletEncrypted === void 0 ? void 0 : walletEncrypted.activeWallet;\n  });\n  const createAccountID = async () => {\n    try {\n      setLoading(true);\n      let formattedAccountID = accountID.includes(\".testnet\") ? accountID : accountID + \".testnet\";\n      const near = await connect(CONFIG);\n      const accountInfo = await near.account(formattedAccountID);\n      const state = await checkAccountStatus(accountInfo);\n      const userInfo = await getStorageSyncValue(\"userInfo\");\n      let keys = userInfo ? Object.keys(userInfo) : null;\n      let publicKey = Object.keys(userInfo[activeWallet][\"accounts\"])[0];\n      if (state) {\n        alert(\"Account with this name already present\");\n        setLoading(false);\n      } else {\n        await near.createAccount(formattedAccountID, publicKey);\n        userInfo[activeWallet] = {\n          ...userInfo[activeWallet],\n          accountID: formattedAccountID\n        };\n        dispatch({\n          type: SWITCH_ACCOUNT,\n          payload: {\n            activeWallet: keys ? `wallet${keys.length}` : \"wallet1\",\n            activeAccountID: formattedAccountID\n          }\n        });\n        await setStorageSyncValue(\"userInfo\", userInfo);\n        alert(`Account Created!!! Your ID is ${formattedAccountID}`);\n        navigate(\"/dashboard\");\n      }\n    } catch (error) {\n      console.log(\"err===\", error);\n      alert(error.message);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Account ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Example ID's: thisismyid.testnet, firstid.testnet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: accountID,\n      placeholder: \"example.testnet\",\n      onChange: e => setAccountID(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createAccountID,\n      children: \"Create Account ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(ReserveAccountID, \"4JWaBWNP+hAAxwFvTT8JjWevgBw=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = ReserveAccountID;\nexport default ReserveAccountID;\nvar _c;\n$RefreshReg$(_c, \"ReserveAccountID\");","map":{"version":3,"names":["React","useState","connect","useNavigate","useSelector","useDispatch","CONFIG","checkAccountStatus","getStorageSyncValue","setStorageSyncValue","SWITCH_ACCOUNT","ReserveAccountID","accountID","setAccountID","loading","setLoading","navigate","dispatch","activeWallet","walletEncrypted","createAccountID","formattedAccountID","includes","near","accountInfo","account","state","userInfo","keys","Object","publicKey","alert","createAccount","type","payload","length","activeAccountID","error","console","log","message","e","target","value"],"sources":["/Users/dahan/Desktop/blockchain/BTA1stProject-18/near-pocket/src/views/Popup/ReserveAccountID.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"near-api-js\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { CONFIG } from \"../../constants\";\nimport {\n  checkAccountStatus,\n  getStorageSyncValue,\n  setStorageSyncValue,\n} from \"../../utils/utilsUpdated\";\nimport { SWITCH_ACCOUNT } from \"../../redux/actionTypes\";\n\nconst ReserveAccountID = () => {\n  const [accountID, setAccountID] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const activeWallet = useSelector(\n    ({ walletEncrypted }) => walletEncrypted?.activeWallet\n  );\n\n  const createAccountID = async () => {\n    try {\n      setLoading(true);\n      let formattedAccountID = accountID.includes(\".testnet\")\n        ? accountID\n        : accountID + \".testnet\";\n      const near = await connect(CONFIG);\n      const accountInfo = await near.account(formattedAccountID);\n      const state = await checkAccountStatus(accountInfo);\n      const userInfo = await getStorageSyncValue(\"userInfo\");\n      let keys = userInfo ? Object.keys(userInfo) : null;\n\n      let publicKey = Object.keys(userInfo[activeWallet][\"accounts\"])[0];\n\n      if (state) {\n        alert(\"Account with this name already present\");\n        setLoading(false);\n      } else {\n        await near.createAccount(formattedAccountID, publicKey);\n        userInfo[activeWallet] = {\n          ...userInfo[activeWallet],\n          accountID: formattedAccountID,\n        };\n\n        dispatch({\n          type: SWITCH_ACCOUNT,\n          payload: {\n            activeWallet: keys ? `wallet${keys.length}` : \"wallet1\",\n            activeAccountID: formattedAccountID,\n          },\n        });\n        await setStorageSyncValue(\"userInfo\", userInfo);\n        alert(`Account Created!!! Your ID is ${formattedAccountID}`);\n        navigate(\"/dashboard\");\n      }\n    } catch (error) {\n      console.log(\"err===\", error);\n      alert(error.message);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <h1>Create Account ID</h1>\n      <p>Example ID's: thisismyid.testnet, firstid.testnet</p>\n\n      <input\n        value={accountID}\n        placeholder=\"example.testnet\"\n        onChange={e => setAccountID(e.target.value)}\n      />\n      {loading ? (\n        <p>Loading!!!</p>\n      ) : (\n        <button onClick={createAccountID}>Create Account ID</button>\n      )}\n    </div>\n  );\n};\n\nexport default ReserveAccountID;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}